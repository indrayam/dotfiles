[user]
	name = Anand Sharma
	email = anasharm@cisco.com
	signingkey = F19896ACD4E00ECA
[core]
    editor = nvim
    excludesfile = /Users/anasharm/.gitignore_global
    autocrlf = input
    pager = diff-so-fancy | less --tabs=4 -RFX
[color]
    ui = true
[credential]
    helper = osxkeychain
	helper = /usr/local/share/gcm-core/git-credential-manager
[gpg]
	program = /opt/homebrew/bin/gpg
[push]
    default = simple
[pull]
    ff = only
[commit]
    template = /Users/anasharm/.stCommitMsg
	gpgsign = true
[diff]
    tool = Kaleidoscope
[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
    prompt = false
[merge]
    tool = Kaleidoscope
    keepBackup = false
[mergetool "Kaleidoscope"]
    cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustExitCode = true
    prompt = false
[color "diff"]
    meta = 227
    frag = magenta bold
    commit = 227 bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
    required = true
	process = git-lfs filter-process
[alias]
    # basic
    s = status --short
    co = checkout
    br = branch
    cat = show --compact-summary
    r = reset
    ls = log --pretty=format:"%C(green)%h\\ %C(yellow)%an=>%C(magenta)%ad%Cred%d\\ %Creset%s" --decorate --date=relative
    la = log --graph --decorate --oneline --all
    amend = commit --amend
    # reset 
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard
    # rebase workflow (Source: Idiot proof git https://softwaredoug.com/blog/2022/11/09/idiot-proof-git-aliases.html)
    mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
    rup = remote update -p
    synced = "!git pull origin $(git mainbranch) --rebase"
    update = "!git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase"
    squash = "!git rebase -v -i $(git mainbranch)"
    publish = push origin HEAD --force-with-lease
    pub = publish
    # update and merge with fast-forward only
    update-ff = "!git remote update -p; git merge --ff-only @{u}"
    # for github remotes
    pr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
    # for bitbucket/stash remotes
    spr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull-requests/$1/from:pr/$1 && git checkout pr/$1; }; f" 
	project-summary = !which onefetch && onefetch
[init]
	defaultBranch = main
[credential "https://dev.azure.com"]
	useHttpPath = true
